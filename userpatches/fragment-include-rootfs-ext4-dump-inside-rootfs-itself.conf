display_alert "Activating fragment" "fragment-include-rootfs-ext4-dump-inside-rootfs-itself" "info"

# For this to work we need a very big image size. We''ll fill it with itself, so get the size and double it at least.
# Current config is generating around 1200Mb rootfs. So 4096 should be safe.
export FIXED_IMAGE_SIZE=4096

config_pre_umount_final_image() {
	display_alert "Custom config stage" "config_pre_umount_final_image" "info"
	# # we can either umount/remount here, or remount/umount below
}

config_post_umount_final_image() {
	display_alert "Custom config stage" "config_post_umount_final_image" "info"

	echo "Dumping image..."
	e2image -ra "${LOOP}p2" "${MOUNT}/../rootfs.ext4.img"
	ls -lah "${MOUNT}/../rootfs.ext4.img"

	# No real need to compress. The file created is sparse, and ext4 works ok with those.

	#echo "Compressing..."
	#xz -1 -T0 "${MOUNT}/../rootfs.ext4.img"
	#ls -lah "${MOUNT}/../rootfs.ext4.img.xz"

	echo "Re-mounting..."
	mount "${LOOP}p2" "${MOUNT}"

	echo "Copying..."
	#cp -v "${MOUNT}/../rootfs.ext4.img.xz" "${MOUNT}/root/rootfs.ext4.img.xz"
	cp -v "${MOUNT}/../rootfs.ext4.img" "${MOUNT}/root/rootfs.ext4.img"

	echo "Done, sync..."
	sync

	echo "Unmount..."
	umount "${MOUNT}"

	echo "Sync again"
	sync

	echo "Done."
}
