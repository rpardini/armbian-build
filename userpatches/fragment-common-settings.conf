display_alert "Activating fragment" "fragment-common-settings" "info"

source fragment-be-more-like-ubuntu-cloud.conf
source fragment-include-rootfs-ext4-dump-inside-rootfs-itself.conf
source fragment-netplan+cloud-init.conf
source extra-rpardini.conf # my own proxy settings etc

display_alert "fragment-common-settings" "setting default values" "info"

# Don't use any kind of torrent/http rootfs, build it ourselves
# export ROOT_FS_CREATE_ONLY=force # What? no!!!

# Configure those to your liking.
export INSTALL_HEADERS=no
export BUILD_KSRC=no
export EXTRAWIFI=no
export WIREGUARD=yes
export AUFS=yes

# Armbian settings. Don't touch.
export COMPRESS_OUTPUTIMAGE=sha,img # xz,
export REPOSITORY_INSTALL=""        # comma-separated list of core modules which will be installed from repository
export DEST_LANG="en_US.UTF-8"      # sl_SI.UTF-8, en_US.UTF-8
export EXTERNAL_NEW="prebuilt"      # compile and install or install prebuilt additional packages
export INSTALL_HEADERS=""           # install kernel headers package
export LIB_TAG="master"             # change to "branchname" to use any branch currently available.
export USE_TORRENT="yes"            # use torrent network for faster toolchain and cache download
export DOWNLOAD_MIRROR=""           # set to "china" to use mirrors.tuna.tsinghua.edu.cn
export CARD_DEVICE=""               # device name /dev/sdx of your SD card to burn directly to the card when done
export KERNEL_ONLY=no
export BRANCH=current
export BUILD_MINIMAL=no # No minimal. Fully working server cli please
export BUILD_DESKTOP=no # No desktop. You install it later after jumpstarting.
export FULL_DESKTOP="no"
export BOOT_LOGO=""

####
#### Dev stuff. Don't touch unless you're adding a board.
####
export KERNEL_CONFIGURE=no        # Change to yes to make menuconfig before compiling. The edited config will be output in output/config
export USE_GITHUB_UBOOT_MIRROR=no # U-boot lives in a Gitlab repo that goes down sometimes, use Github mirror if so.

# Rebuild kernel and userspace
export CLEAN_LEVEL=debs,images
# Rebuild userspace only
#export CLEAN_LEVEL=images
# Rebuild kernel packages only
#export CLEAN_LEVEL=debs

# Stops before compilling u-boot and kernel, allow you to change stuff (.dts, .dtsi, etc) directly at the tree.
# Will generate patches afterwards...
export CREATE_PATCHES=no
#export CREATE_PATCHES=yes

## rpardini specific
export COMPRESS_OUTPUTIMAGE=img # only, for dev
#OFFLINE_WORK=yes # Do not git fetch during build. Makes it faster from the 2nd+ build.
export OFFLINE_WORK=yes
export OFFLINE_WORK_GIT=yes # for actual work without fetching from git all the time

###
### Logging
###
export PROGRESS_LOG_TO_FILE=yes
export PROGRESS_DISPLAY=none

###
### Some hooks that could be useful one day, but not really used right now.
###

# Very late to do anything anymore, except fix the perms on $SRC
run_after_build() {
	display_alert "Custom config stage" "run_after_build" "info"
}

# This run after image_tweaks_pre_customize(), after the customize-image.sh script (which we don't use, we dont like being chrooted)
# and after the overlay has been unmounted.
image_tweaks_post_customize() {
	display_alert "Custom config stage" "image_tweaks_post_customize" "info"
}
