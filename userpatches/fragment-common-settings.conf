display_alert "Activating fragment" "fragment-common-settings" "info"

source fragment-be-more-like-ubuntu-cloud.conf
source fragment-include-rootfs-ext4-dump-inside-rootfs-itself.conf
source fragment-netplan+cloud-init.conf
source extra-rpardini.conf # my own proxy settings etc

display_alert "fragment-common-settings" "setting default values" "info"

# Common settings. Customize if you wish...
export RELEASE=groovy
export SERIALCON="ttyAML0"
export DEFAULT_CONSOLE="serial"

# More stuff -- I dunno if works...
export ROOTPWD="123@#aB"
export TZDATA="Europe/Amsterdam"

# Configure those to your liking.
export ARMHF_ARCH="skip"            # Pure arm64 arch without armhf
export COMPRESS_OUTPUTIMAGE=sha,img # xz,
export REPOSITORY_INSTALL=""        # comma-separated list of core modules which will be installed from repository
export DEST_LANG="en_US.UTF-8"      # sl_SI.UTF-8, en_US.UTF-8
export EXTERNAL_NEW="prebuilt"      # compile and install or install prebuilt additional packages
export LIB_TAG="master"             # change to "branchname" to use any branch currently available.
export USE_TORRENT="yes"            # use torrent network for faster toolchain and cache download
export DOWNLOAD_MIRROR=""           # set to "china" to use mirrors.tuna.tsinghua.edu.cn
export CARD_DEVICE=""               # device name /dev/sdx of your SD card to burn directly to the card when done
export BUILD_MINIMAL=no             # No minimal. Fully working server cli please
export BUILD_DESKTOP=no             # No desktop. You install it later after jumpstarting.
export BOOT_LOGO=""                 # it still builds the logo, thank you.
export INSTALL_HEADERS=yes          # install kernel headers package
export INSTALL_KSRC=no              # install kernel-source package in the rootfs. it is slow, but allows us to hack kernel on the device itself easily
export BUILD_KSRC=no                # build kernel-source package. it is slow, but allows us to hack kernel on the device itself easily
export EXTRAWIFI=no                 # I dont use any wifi. So thank you but no
export WIREGUARD=yes                # Always nice. Is it not mainlined yet?
export AUFS=yes                     # Yes, docker is essential on all my boxes.
export KERNEL_ONLY=no               # No, full image
export BRANCH=current               # Mainline always
export FULL_DESKTOP="no"            # No desktop, not full nor empty

####
#### Dev stuff. Don't touch unless you're adding a board.
####
export KERNEL_CONFIGURE=no        # Change to yes to make menuconfig before compiling. The edited config will be output in output/config
export USE_GITHUB_UBOOT_MIRROR=no # U-boot lives in a Gitlab repo that goes down sometimes, use Github mirror if so.

export CLEAN_LEVEL=debs,images  # Rebuild kernel packages and userspace
#export CLEAN_LEVEL=images # Rebuild userspace only
#export CLEAN_LEVEL=debs # Rebuild kernel packages only

# Stops before compiling u-boot and kernel, allow you to change stuff (.dts, .dtsi, etc) directly at the tree. Will generate patches afterwards...
export CREATE_PATCHES=no        # does NOT stop for patching
#export CREATE_PATCHES=yes # stops for patching twice;

## rpardini specific
export COMPRESS_OUTPUTIMAGE=img # i'm an sdcard jockey -- no hashes for me
export OFFLINE_WORK=no          # avoid using the network
export OFFLINE_WORK_GIT=no      # avoid using the network during git operations
#export OFFLINE_WORK=yes         # try to avoid using the network, sometimes, sometimes not.

###
### Logging
###
export PROGRESS_LOG_TO_FILE=yes # log some more stuff, or not, to disk
export PROGRESS_DISPLAY=none    # do not dump compilation results to screen causing thousands of lines of scroll

###
### Some hooks that could be useful one day, but not really used right now.
###

# Very late to do anything anymore, except fix the perms on $SRC
run_after_build() {
	display_alert "Custom config stage" "run_after_build" "info"
}

# This run after image_tweaks_pre_customize(), after the customize-image.sh script (which we don't use, we dont like being chroot'ed)
# and after the overlay has been unmounted.
image_tweaks_post_customize() {
	display_alert "Custom config stage" "image_tweaks_post_customize" "info"
}
